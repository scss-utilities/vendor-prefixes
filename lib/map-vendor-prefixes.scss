/// Default list of supported vendor prefixes for `map-vendor-prefixes`
/// @see {function} map-vendor-prefixes
$vendor-id-list: (webkit, moz, ms, o);


/// Generates SCSS map of prefixed `Property: Value` pares
/// @returns {map} - Map of values or mapped list of vendor prefixed properties or values
/// @param {string} $property  - The CSS property name
/// @param {*} $value          - Number, string, even CSS _function_ calls
/// @param {list} $vendor-list - List of vendor prefixes to pre-append
/// @param {string} $prefix    - Weather `string` or `value` should be pre-append to
/// @throws How did we get here?
/// @example scss - Usage of map-vendor-prefixes
///   $mapped-vendors: map-vendor-prefixes(
///     $property: text-stroke-color,
///     $value: white,
///     $vendor-list: (-webkit, -o),
///     $prefix: property
///   );
/// @example scss - Results of map-vendor-prefixes
///   (
///    -webkit-text-stroke-color: white,
///         -o-text-stroke-color: white,
///            text-stroke-color: white
///   )
/// @author S0AndS0
/// @license AGPL-3.0
@function map-vendor-prefixes(
  $property: false,
  $value: false,
  $vendor-list: $vendor-id-list,
  $prefix: property,
) {
  $vendor-map: ();
  $property-list: ();
  @each $vendor in $vendor-list {
    @if $prefix == 'property' {
      $vendor-map: map-merge($vendor-map, (#{$vendor}-#{$property}: #{$value}));
    } @else if $prefix == 'value' {
      $property-list: append($property-list, #{$vendor}-#{$value}, comma);
      $vendor-map: map-merge($vendor-map, ($property: $property-list));
    } @else {
      @warn "$prefix was neither 'property' or 'value'";
      @error "$property: $value -> #{$property}: #{$value}";
    }
  }

  // Append un-prefixed '$property: $value' pare to the end of map
  @if $prefix == 'property' {
    $vendor-map: map-merge($vendor-map, ($property: $value));
  } @else if $prefix == 'value' {
    $property-list: append($property-list, $value, comma);
    $vendor-map: map-merge($vendor-map, ($property: $property-list));
  } @else {
    @error "How did we get here?";
  }

  @return $vendor-map;
}
