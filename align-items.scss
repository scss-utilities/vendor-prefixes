/// How items should be aligned within elment, class, or ID
/// @param {string} $value
/// @returns {CSS} - `Property: Value` with prefixed properties
/// @example - Available values
///   - `stretch`:    Default, items stretch to take up space
///   - `center`:     Items are _center-positioned_ within flex container
///   - `flex-start`: Items are _start-positioned_ within flex container
///   - `flex-end`:   Items are _end-positioned_ within flex container
///   - `baseline`:   Items are positions at baseline within flex container
///   - `inital`:
///   - `inherit`:
/// @example scss - Usage of align-items
///   .example-class {
///     @include align-items($value: inherit);
///   }
/// @example css - Resutls of align-items
///   .example-class {
///     -webkit-align-items: inherit;
///             align-items: inherit;
///   }
/// @requires {mixin} render-vendor-prefixes
/// @author S0AndS0
/// @license AGPL-3.0
@mixin align-items($value) {
  @include render-vendor-prefixes(
    $property: align-items,
    $value: $value,
    $vendor-list: (
      -webkit, // Safari 9.0/7.0
    ),
    $prefix: property
  );
}
